08-08-2019


# UBUNTU


1. Clone opcua from github

	git clone https://github.com/Mariunil/opcua.git


2. Install needed dependency to compile the open62541 library

 	sudo apt-get install git build-essential gcc pkg-config cmake python python-six


3. Intall other dependencies

	sudo apt-get install cmake-curses-gui		    # Needed for CMAKE GUI
	sudo apt-get install libmbedtls-dev 		    # For encryption
	sudo apt-get install liburcu-dev 		        # For multithreading
	sudo apt-get install check	 	                # For unit tests
	sudo apt-get install python-sphinx graphviz 	# For doc generation
	sudo apt-get install python-sphinx-rtd-theme 	# For doc's style


3. Clone open62541 from github

	Navigate to /opcua/lib/

	git clone https://github.com/open62541/open62541.git


4. Configure open62541 as a submodule and prepare for cmake


	Naviagte to the open62541 directory

    git submodule update --init --recursive
    mkdir build && cd build
    cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUA_NAMESPACE_ZERO=FULL ..


	This is the recommended cmake options at the time of writing for a default installation.
		
	This will enable the following features in 0.4:
		•  Discovery
		•  FullNamespace
		•  Methods
		•  Subscriptions

	The following features are not enabled and can be optionally enabled 

		•  Amalgamation 
		•  DiscoveryMulticast
		•  Encryption
		•  Multithreading 
		•  Subscriptions

		NOTE: At time of writing Multithreading is at a experimental stage, and users of open62541 have reported issues caused by switching it on.


5. Turn on additional features

	Enter the cmake configuration GUI

		ccmake..


	For simplicity, we will compile the library to a signle open62541.c/.h file. Switch on:

		A_ENABLE_AMALGAMATION


	To enable pubsub networking, switch on:

		UA_ENABLE_PUBSUB
		UA_ENABLE_PUBSUB_DELTAFRAMES
		UA_ENABLE_PUBSUB_INFORMATIONMODEL


	To generate examples and tutorials, switch on:

		 UA_BUILD_EXAMPLES

	
	Save configuration then Generate and exit.


6. Compile open62451 with make

	(while inside /opcua/lib/open62451/build)

	make
	sudo make install



# RASBIAN 


	Same procedure as on Ubuntu, but personally when installing the library on the Raspberry Pi 3b I experienced that when compiling pubsub_API_demo_pub and other pubsub codes, that the compiler couldn't find some of the header files that should have been located in /usr/local/include subdirectory. When comparing the Rasbian installation with the Ubuntu one I noticed the open62541 directory with a subset of header files was missing on the Rasbian installation. 

	The solution was to send the open62541 folder with the header files from inside /usr/local/include on the Ubuntu instalation to the Raspberry pie, and adding it there. The folder is included into the opcua/RaspberryPie/. (This hack will probably stop working after a couple of releases, especially directly copying the folder from opcua/RaspberryPie/. Copying missing header files from a successfull installation to a unsuccesfull one will probably continue to work, allthough may not be necessary when the bug is fixed by open62541 ) 



